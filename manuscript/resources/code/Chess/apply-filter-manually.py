#!/usr/bin/python3

import numpy as np

# Объявить двумерный массив 3x3 с вертикальным фильтром Собеля
sobel_vertical = np.array([ [1, 2, 1], [0, 0, 0], [-1, -2, -1] ])

# Объявить массив с пикселями чёрно-белого изображения
image = np.array([ [19, 10, 39, 48, 20], [30, 68, 238, 73, 14], [45, 6, 59, 202, 57], [63, 185, 223, 190, 34], [38, 13, 15, 32, 12] ])

# Объявить массив для временного хранения перекрытых пикселей изображения
tmp = []

# Объявить массив для временного хранения одного ряда карты признаков
row = []

# Объявить массив для хранения финальной карты признаков с результатом операции свёртки
result = []

# Цикл прохода по 3-м строкам массива изображения, начиная с 1
for i in range(1, 4):

    # Цикл прохода по 3-м столбцам массива изображения, начаиня с 1
    for j in range(1, 4):

        # Добавить в tmp массив i-1 ряд пикселей изображения
        tmp.append([image[i-1][j-1], image[i-1][j], image[i-1][j+1]])

        # Добавить в tmp массив i ряд пикселей изображения
        tmp.append([image[i][j-1],   image[i][j],   image[i][j+1]])

        # Добавить в tmp массив i+1 ряд пикселей изображения
        tmp.append([image[i+1][j-1], image[i+1][j], image[i+1][j+1]])

        # Выполнить произведение Адамара
        row.append(np.sum(np.multiply(tmp, sobel_vertical)))

        # Очистить массив tmp для следующей итерации
        tmp = []

    # Записать текущий ряд в результирующий массив
    result.append(row)

    # Очистить массив row для следующей итерации
    row = []

# Распечатать результирующий массив
print(result)

